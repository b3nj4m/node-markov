{"name":"Node-markov","tagline":"Generate markov chains for chatbots in node","body":"markov\r\n======\r\n\r\nGenerate markov chains for chatbots and freestyle rap contests.\r\n\r\nexamples\r\n========\r\n\r\nqwantz\r\n------\r\n\r\nqwantz.js:\r\n\r\n  var util = require('util');\r\n  var fs = require('fs');\r\n  \r\n  var Markov = require('markov');\r\n  var m = new Markov();\r\n  \r\n  var s = fs.readSync(__dirname + '/qwantz.txt');\r\n  m.train(s);\r\n\r\n  var stdin = process.openStdin();\r\n  util.print('> ');\r\n  \r\n  stdin.on('data', function (line) {\r\n    var res = m.respond(line.toString()).join(' ');\r\n    console.log(res);\r\n    util.print('> ');\r\n  });\r\n\r\noutput:\r\n\r\n  $ node example/qwantz.js \r\n  > Hello friend.\r\n  Oh, that hurts me. How could fall apart, not unlike this tiny house. remains a danger when you? As I see him (quite often, Yes, As Thank I you? take have on! forgotten male, That oppression is is a A friend\r\n  > That is troubling news!\r\n  I've I had must to guard do against with such the a irony part of of their their fundamental fundamental injustices.\r\n  > Justice eh? SOMEBODY LIGHT UP THE BATSIGNAL\r\n  crazy I Utahraptor feel slipped alot in better! your about problems the put future! behind full You? of go My down perspective. The\r\n\r\n## methods\r\n\r\n### new Markov(minimumWords, caseSensitive, stripPunctuation)\r\n\r\nCreate a new markov object. Optionally set `minimumWords` (default 1), `caseSensitive` (default false), `stripPunctuation` (default false).\r\n\r\n### .train(text)\r\n\r\nTrain the markov object with a string `text`, ignoring text with fewer than `minimumWords` words.\r\n\r\n### .search(text)\r\n\r\nSearch for and return some key found in the text body `text`.\r\n\r\nReturn `undefined` if no matches were found.\r\n\r\n### .pickWord(nodes, words)\r\n\r\nChoose a word at random from `nodes`, optionally favoring words in `words`.\r\n\r\n### .next(key)\r\n\r\nFind a key likely to follow after `key`.\r\n\r\nReturns a hash with keys `key`, the canonical next key and `word`, a raw form of\r\n`key` as it appeared in the training text.\r\n\r\n### .prev(key)\r\n\r\nFind a key likely to come before `key`.\r\n\r\nReturns a hash with keys `key`, the canonical next key and `word`, a raw form of\r\n`key` as it appeared in the training text.\r\n\r\n### .fill(key, limit)\r\n\r\nGenerate a markov chain in both directions starting at `key`. Return an array of\r\nthe raw word forms along the way including the raw word form of the supplied\r\n`key`.\r\n\r\nStop when the traversal hits a terminal entry or when limit words have been\r\ngenerated if limit is specified.\r\n\r\n### .respond(text, limit)\r\n\r\nSearch for a starting key in `text` and then call `.fill(key, limit)` on it.\r\n\r\n## tests\r\n\r\n```bash\r\nnpm test\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}